h1. !http://railsapps.github.com/images/rails-36x36.jpg(Rails Application for Omniauth with Mongoid)!  Rails App for Omniauth with Mongoid

Rails 3.2 example application shows how to use Omniauth with Mongoid.

* "OmniAuth":https://github.com/intridea/omniauth manages authentication using a service provider such as Twitter or Facebook.
* MongoDB is used as a datastore with the "Mongoid":http://mongoid.org/  gem for quick development without schemas or migrations.

Best of all, there's a "detailed tutorial":http://railsapps.github.com/tutorial-rails-mongoid-omniauth.html to show how it's built.

* *Service Providers:* Facebook, Twitter, GitHub, LinkedIn, and "many more":https://github.com/intridea/omniauth.
* *Gems:* Mongoid and OmniAuth plus optional jQuery, Haml, RSpec and Cucumber.

You can clone this app or generate a new Rails application using an "application template":https://github.com/RailsApps/rails3-application-templates.

h2. !http://twitter-badges.s3.amazonaws.com/t_logo-a.png(Follow on Twitter)!:http://www.twitter.com/rails_apps Follow on Twitter

Follow the project on Twitter: "@rails_apps":http://twitter.com/rails_apps. Please tweet some praise if you like what you've found.

h2. Tutorial

A complete walkthrough tutorial is available on the GitHub wiki:

h4. "View the Tutorial":http://railsapps.github.com/tutorial-rails-mongoid-omniauth.html

The tutorial documents each step to follow to create the application. Every step is documented concisely, so a complete beginner can create this application without any additional knowledge. However, no explanation is offered for any of the steps, so if you are a beginner, you’re advised to look for an introduction to Rails elsewhere. See a list of recommended resources for "Rails":http://railsapps.github.com/rails.html.

If you simply wish to modify the application for your own project, you can download the application and set it up as described below, without following the tutorial.

h2. What Is Implemented -- and What Is Not

This is a demonstration application that allows you to visit a home page and see a list of users. You can log in using a service provider such as Twitter and view a profile for each user. You can customize this app as you need.

h4. Single Provider or Multiple Providers?

This application is designed for sign-in with a *single provider*. For example, you may be creating an application just for Twitter users. Alternatively, it's possible to create an application that lets a user log in using *multiple providers*. For these more complex applications, see other examples and tutorials listed below.

h4. When to use Devise?

"Devise":http://github.com/plataformatec/devise provides authentication using username (or email address) and password. If you don't need the option of using a username/password, that is, if you wish to have all your users sign in using a service provider's account (such as Twitter or Facebook), there's no need to use Devise. Devise can be used in conjunction with the OmniAuth gem when you need to offer users the option of signing up for access to a website using an email address. For example, combine Devise with OmniAuth to accommodate users who want to log in with various service providers (Twitter, Facebook, etc.) as well as users who don't have external accounts and want to sign up with just an email address. See suggestions below for tutorials and examples that combine Devise with OmniAuth.

h4. The Email Problem

You don't need to ask a visitor for an email address when you build an application that allows a user to log in using a service provider such as Twitter or Facebook. You may consider that an advantage: if a user is logged in with Twitter or Facebook, they don't need to enter an email address and password to access your application. However, the lack of an email address may be a business drawback, if you want the opportunity to stay in contact with the user by email. Some service providers provide the user's email address to your application (Facebook). Some service providers only provide the email address at the user's option (GitHub supplies it if the user has provided a public email address). And other service providers do not provide the email address at all (Twitter, LinkedIn).

This example app shows how to request an email address from the user when he or she first requests access to your application. It is easy to remove this feature if you don't require it.

h4. Similar Examples and Tutorials

This is one in a series of Rails example apps and tutorials from the "RailsApps Project":http://railsapps.github.com/. See a list of additional "Rails examples, tutorials, and starter apps":http://railsapps.github.com/rails-examples-tutorials.html.

|_. Author |_. Example App |_. Comments |
| Ryan Bates | "Simple OmniAuth":http://railscasts.com/episodes/241-simple-omniauth | screencast |
| Markus Proske | "OmniAuth Pure":http://www.communityguides.eu/articles/16 | example and tutorial for OmniAuth with multiple providers |
| Markus Proske | "Devise and OmniAuth":http://www.communityguides.eu/articles/11 | example and tutorial for OmniAuth and Devise with multiple providers |
| Daniel Kehoe | "Devise, RSpec, Cucumber":https://github.com/RailsApps/rails3-devise-rspec-cucumber | Detailed tutorial, app template, starter app, using SQLite |
| Daniel Kehoe | "Devise, Mongoid":https://github.com/RailsApps/rails3-mongoid-devise | Detailed tutorial, app template, starter app, using MongoDB |
| Fernando Tapia Rico | "Devise, OmniAuth, Mongoid":https://github.com/fertapric/rails3-mongoid-devise-omniauth | With tutorial, using MongoDB |

h2. Obtaining API Keys

Before installing the application, you may wish to contact the service provider you'll use to obtain any required API keys. The example assumes you will be using Twitter.

h4. Twitter

Visit "https://dev.twitter.com/apps/new":https://dev.twitter.com/apps/new to register your application. When you register your application, use the following values:

|_. Application Website                    |_. Callback URL |_. Notes |
| http://example.com | http://127.0.0.1:3000/ | http://localhost:3000/ doesn't work |

h4. Facebook

Visit "http://developers.facebook.com/setup":http://developers.facebook.com/setup to register your application.

h4. GitHub

Visit "https://github.com/account/applications/new":https://github.com/account/applications/new to register your application.

h2. Dependencies

Before running this app, you will need:

* The Ruby language (version 1.9.3)
* Rails 3.2
* A working installation of "MongoDB":http://www.mongodb.org/ (version 1.6.0 or newer)

See "Installing Rails 3.2":http://railsapps.github.com/installing-rails.html for detailed instructions and advice.

h4. Installing MongoDB

If you don't have MongoDB installed on your computer, you'll need to install it and set it up to be always running on your computer (run at launch). On Mac OS X, the easiest way to install MongoDB is to install "Homebrew":http://mxcl.github.com/homebrew/ and then run the following:

<pre>
brew install mongodb
</pre>

Homebrew will provide post-installation instructions to get MongoDB running. The last line of the installation output shows you the MongoDB install location (for example, */usr/local/Cellar/mongodb/1.8.0-x86_64*). You'll find the MongoDB configuration file there. After an installation using Homebrew, the default data directory will be */usr/local/var/mongodb*.

h2. Getting the Application

You have several options for getting the code.

h4. Fork, Clone, or Generate?

_Fork:_ If you'd like to add features (or bug fixes) to improve the example application, you can fork the GitHub repo and "make pull requests":http://help.github.com/send-pull-requests/. Your code contributions are welcome!

_Clone:_ If you want to copy and customize the app with changes that are only useful for your own project, you can clone the GitHub repo. You'll need to search-and-replace the project name throughout the application. You probably should generate the app instead (see below).

_Generate:_ If you want to use the project as a starter app for your customized application, use the application template to generate a new version of the example app. You'll be able to give it your own project name when you generate the app. Generating the application (described below) gives you many options.

h4. Clone the Repository

If you simply wish to examine the example code, you can download the code ("clone the repository") with the command

<pre>
$ git clone git://github.com/RailsApps/rails3-mongoid-omniauth.git
</pre>

The source code is managed with Git (a version control system). You'll need Git on your machine (install it from "http://git-scm.com/":http://git-scm.com/).

h4. Using the Ready-Made Application Template

You can use an application template to generate a new version of the example app. You’ll find an application template for this app in the "Rails Application Templates":https://github.com/RailsApps/rails3-application-templates repository.

To build the "rails3-mongoid-omniauth" example application, run the command:

<pre>
$ rails new myapp -m https://github.com/RailsApps/rails3-application-templates/raw/master/rails3-mongoid-omniauth-template.rb -T -O
</pre>

Use the @-T -O@ flags to skip Test::Unit files and Active Record files.

The @$@ character indicates a shell prompt; don't include it when you run the command.

This creates a new Rails app (with the name @myapp@) on your computer.

The application generator templates will ask you for various preferences.

To reproduce the example application exactly as found in the repository, make the following selections:

* Would you like to use "Haml":http://en.wikipedia.org/wiki/Haml instead of ERB? *no*
* Would you like to use "RSpec":http://rspec.info/ instead of TestUnit? *yes*
* Would you like to use "factory_girl":https://github.com/thoughtbot/factory_girl for test fixtures with RSpec? *yes*
* Would you like to use "machinist":https://github.com/notahat/machinist for test fixtures with RSpec? *no*
* Would you like to use "Cucumber":http://cukes.info/ for your BDD? *yes*
* Would you like to use "Guard":http://intridea.com/posts/hire-a-guard-for-your-project to automate your workflow? *no*
* Would you like to use Mongoid to connect to a MongoDB database? *yes* 
* Would you like to use OmniAuth for authentication? *yes*
* Which service provider will you use? *1 (Twitter)*
* Would you like the app to use a Gmail account to send email? *yes*
* Which front-end framework would you like for HTML5 and CSS3? *#1*
## None
## "Zurb Foundation":http://foundation.zurb.com/
## "Twitter Bootstrap":http://twitter.github.com/bootstrap/ (less)
## "Twitter Bootstrap":http://twitter.github.com/bootstrap/ (sass)
## "Skeleton":http://www.getskeleton.com/
## Normalize CSS for consistent styling
* Which form gem would you like? *#1*
## None
## simple form
## simple form (bootstrap)
* Would you like to use "rails-footnotes":https://github.com/josevalim/rails-footnotes during development? *no*
* Would you like to set a robots.txt file to ban spiders? *yes*
* Would you like to add 'will_paginate' for pagination? *no*
* Add 'therubyracer' JavaScript runtime (for Linux users without node.js)? *no*

You can choose other selections if you don’t care about matching the example application exactly.

h4. Use "Recipes" to Customize an Application Template

The "tutorial":http://railsapps.github.com/tutorial-rails-mongoid-omniauth.html shows how a customized application template can be assembled from "recipes." The application template was created using the "Rails Apps Composer":https://github.com/RailsApps/rails_apps_composer gem which provides a convenient way to assemble a reusable application template by selecting various "recipes" for popular Rails development packages.

h4. Please Remember: Edit the README

If you're open sourcing the app on GitHub, please edit the README file to add a description of the app and your contact info. Changing the README is important if you're using a clone of the example app. I've been mistaken (and contacted) as the author of apps that are copied from my example.

h2. Getting Started

h4. About Required Gems

The application uses the following gems:

* "rails":http://rubygems.org/gems/rails
* "rspec-rails":http://rubygems.org/gems/rspec-rails
* "database_cleaner":http://rubygems.org/gems/database_cleaner
* "factory_girl_rails":http://rubygems.org/gems/factory_girl_rails
* "cucumber-rails":http://rubygems.org/gems/cucumber-rails
* "capybara":http://rubygems.org/gems/capybara
* "mongoid":http://rubygems.org/gems/mongoid
* "bson_ext":http://rubygems.org/gems/bson_ext
* "omniauth":http://rubygems.org/gems/omniauth

h4. Install the Required Gems

Install the required gems on your computer:

@$ bundle install@

You can check which gems are installed on your computer with:

@$ gem list --local@

Keep in mind that you have installed these gems locally. When you deploy the app to another server, the same gems (and versions) must be available.

h4. Set Up Configuration for OmniAuth

This app uses OmniAuth for user management and authentication. OmniAuth is at "https://github.com/intridea/omniauth":https://github.com/intridea/omniauth.

You'll need an OmniAuth initialization file *config/initializers/omniauth.rb* set up for the service provider you'll use. For most service providers, you need to register your application and obtain API keys to use their authentication service.

For Twitter:

<pre>
Rails.application.config.middleware.use OmniAuth::Builder do
  provider :twitter, 'KEY', 'SECRET'
end
</pre>

For Facebook:

<pre>
Rails.application.config.middleware.use OmniAuth::Builder do
  provider :facebook, 'KEY', 'SECRET'
end
</pre>

For others, see "Module: OmniAuth::Strategies":http://intridea.github.com/omniauth/OmniAuth/Strategies.html.

h4. Keep Your API Keys Secret

Make sure that the file *config/initializers/omniauth.rb* will not be added to your GitHub repository. If you've created a public repository and you commit the file with your API Keys, anyone who browses your repo will be able to obtain your API keys and masquerade as your application.

Modify the *.gitignore* file before commiting the file with your API keys. Add:

<pre>
config/initializers/omniauth.rb
</pre>

You'll need to keep a local copy of the file and recreate it if you replace your local repo with a clone from a remote Git repository.

h4. Using the Database Seed File to Reset the Datastore

You'll want a convenient way to reset the datastore. The file *db/seeds.rb* is set up to reset the MongoDB database.

<pre>
puts 'EMPTY THE MONGODB DATABASE'
Mongoid.master.collections.reject { |c| c.name =~ /^system/}.each(&:drop)
</pre>

When you wish to reset the MongoDB datastore you can run the command:

@$ rake db:seed@

You can also use the *db/seeds.rb* file to initialize the datastore by creating and saving any model instances you need.

Set the database for running tests:

<pre>
$ bundle exec rake db:test:prepare
</pre>

h2. Test the App

You can check that your app runs properly by entering the command

@$ rails server@

To see your application in action, open a browser window and navigate to "http://localhost:3000/":http://localhost:3000. You should see the default user listed on the home page. When you click on the user's name, you should be required to log in before seeing the user's profile page.

h2. Deploy to Heroku

For your convenience, here are "instructions for deploying your app to Heroku":http://railsapps.github.com/rails-heroku-tutorial.html. Heroku provides low cost, easily configured Rails application hosting.

h2. Testing

The application contains RSpec unit tests and Cucumber scenarios and steps. The tests are minimal and can be improved.

Please send the author a message, create an issue, or submit a pull request if you can contribute improved RSpec or Cucumber files.

After installing the application, run @rake -T@ to check that rake tasks for RSpec and Cucumber are available.

Run @rake spec@ to run all RSpec tests.

Run @rake cucumber@ (or more simply, @cucumber@) to run all Cucumber scenarios and steps.

h2. Documentation and Support

This is the only documentation.

Ryan Bates offers a "Railscast on Simple OmniAuth":http://railscasts.com/episodes/241-simple-omniauth. You can find documentation for "OmniAuth":https://github.com/intridea/omniauth at "https://github.com/intridea/omniauth":https://github.com/intridea/omniauth. There is an active "OmniAuth mailing list":http://groups.google.com/group/omniauth and you can submit "OmniAuth issues":https://github.com/intridea/omniauth/issues at GitHub.

h4. Issues

Please create a "issue on GitHub":http://github.com/RailsApps/rails3-mongoid-omniauth/issues if you identify any problems or have suggestions for improvements.

h4. Where to Get Help

Your best source for help with problems is "Stack Overflow":http://stackoverflow.com/questions/tagged/ruby-on-rails-3. Your issue may have been encountered and addressed by others.

You can also try "Rails Hotline":http://www.railshotline.com/, a free telephone hotline for Rails help staffed by volunteers.

h2. Contributing

If you make improvements to this application, please share with others.

Send the author a message, create an "issue":http://github.com/RailsApps/rails3-mongoid-omniauth/issues, or fork the project and submit a pull request.

If you add functionality to this application, create an alternative implementation, or build an application that is similar, please contact me and I'll add a note to the README so that others can find your work.

h2. Credits

Daniel Kehoe ("http://danielkehoe.com/":http://danielkehoe.com/) implemented the application and wrote the tutorial.

Is the app useful to you? Follow the project on Twitter:
"@rails_apps":http://twitter.com/rails_apps
and tweet some praise. I'd love to know you were helped out by what I've put together.

h2. License

h4. Public Domain Dedication

This work is a compilation and derivation from other previously released works. With the exception of various included works, which may be restricted by other licenses, the author or authors of this code dedicate any and all copyright interest in this code to the public domain. We make this dedication for the benefit of the public at large and to the detriment of our heirs and successors. We intend this dedication to be an overt act of relinquishment in perpetuity of all present and future rights to this code under copyright law.

